from turtle import*
width(5)
speed(0)
up()
goto(-700, 0)
hideturtle()
down()
def ENTER(line):
    line -= 1
    up()
    goto(-700, (line * (100 + 25)) * -1)
    down()
def SPACE():
    up()
    forward(75)
    down()
def A():
    left(75)
    forward(100)
    back(50)
    right(75)
    forward(25)
    back(25)
    left(75)
    forward(50)
    right(75+75)
    forward(100)
    left(75)
    up()
    forward(25)
    down()
def B():
    left(90)
    forward(97)
    back(97/2)
    right(90)
    circle(97/4, 180)
    left(90)
    forward(97)
    left(90)
    circle(97/4, 180)
    left(90)
    forward(97/2)
    left(90)
    up()
    forward(97/4 + 25)
    down()
def C():
    up()
    forward(97)
    left(90)
    forward(97/2)
    circle(97/2, 60)
    down()
    circle(97/2, 360-120)
    up()
    circle(97/2, 330)
    forward(97/2 + 15)
    down()
def D():
    circle(97/2, 180)
    left(90)
    forward(97)
    left(90)
    up()
    forward(97/2 + 25)
    down()
def E():
    left(90)
    forward(97)
    right(90)
    forward(50)
    back(50)
    right(90)
    forward(97/2)
    left(90)
    forward(50)
    back(50)
    right(90)
    forward(97/2)
    left(90)
    forward(50)
    up()
    forward(25)
    down()
def F():
    left(90)
    forward(97)
    right(90)
    forward(50)
    back(50)
    right(90)
    forward(97/2)
    left(90)
    forward(50)
    back(50)
    right(90)
    forward(97/2)
    left(90)
    up()
    forward(75)
    down()
def G():
    up()
    forward(97/2)
    down()
    circle(97/2, 90)
    left(90)
    forward(97/2)
    back(97/2)
    right(90)
    up()
    circle(97/2, 60)
    down()
    circle(97/2, 210)
    up()
    forward(97/2 + 15)
    down()
def H():
    left(90)
    forward(97)
    back(97/2)
    right(90)
    forward(50)
    left(90)
    forward(97/2)
    back(97)
    right(90)
    up()
    forward(25)
    down()
def I():
    forward(50)
    back(25)
    left(90)
    forward(97)
    left(90)
    forward(25)
    back(50)
    forward(25)
    left(90)
    forward(97)
    left(90)
    forward(25)
    up()
    forward(25)
    down()
def J():
    up()
    left(90)
    forward(97/4)
    left(180)
    down()
    forward(97/4)
    left(90)
    forward(50)
    left(90)
    forward(97)
    back(97)
    right(90)
    up()
    forward(25)
    down()
def K():
    left(90)
    forward(97)
    back(97/2)
    right(45)
    forward(97/1.45)
    back(97/1.45)
    right(90)
    forward(97/1.45)
    back(97/1.45)
    left(135)
    back(97/2)
    right(90)
    up()
    forward(75)
    down()
def L():
    forward(50)
    back(50)
    left(90)
    forward(97)
    back(97)
    right(90)
    up()
    forward(75)
    down()
def M():
    left(90)
    forward(97)
    right(90 + 60)
    forward(97/1.25)
    left(120)
    forward(97/1.25)
    right(150)
    forward(97)
    left(90)
    up()
    forward(25)
    down()
def N():
    left(90)
    forward(97)
    right(90 + 75)
    forward(100)
    left(90 + 75)
    forward(97)
    back(97)
    up()
    right(90)
    forward(25)
    down()
def O():
    up()
    forward(97/2)
    down()
    circle(97/2)
    up()
    forward(97/2 + 25)
    down()
def P():
    left(90)
    forward(97)
    back(97/2)
    right(90)
    circle(97/4, 180)
    left(90)
    forward(97)
    left(90)
    up()
    forward(97/4 + 25)
    down()
def Q():
    up()
    forward(97/2)
    down()
    circle(97/2)
    circle(97/2, 45)
    right(90)
    forward(25)
    back(50)
    forward(25)
    left(90)
    circle(97/2, 360 - 45)
    up()
    forward(97/2 + 25)
    down()
def R():
    left(90)
    forward(97)
    back(97/2)
    right(90)
    circle(97/4, 180)
    left(90)
    forward(97/2)
    left(45)
    forward(97/1.45)
    left(45)
    up()
    forward(25)
    down()
def S():
    up()
    left(90)
    forward(97/4)
    right(180)
    down()
    circle(97/4, 180)
    left(45)
    forward(68)
    right(45+90)
    up()
    forward(97/2)
    left(90)
    down()
    circle(97/4, 180)
    up()
    forward(48)
    circle(97/4, 90)
    forward(97/4 + 25)
    down()
def T():
    up()
    forward(50)
    down()
    left(90)
    forward(97)
    left(90)
    forward(50)
    back(100)
    forward(50)
    left(90)
    forward(97)
    left(90)
    up()
    forward(75)
    down()
def U():
    up()
    forward(97/2)
    down()
    circle(97/2, 90)
    forward(97/2)
    up()
    circle(97/2, 180)
    down()
    forward(97/2)
    circle(97/2, 90)
    up()
    forward(97/2 + 25)
    down()
def V():
    up()
    forward(52.5/2)
    left(75)
    down()
    forward(100)
    back(100)
    right(75+180+75)
    forward(100)
    back(100)
    left(75+180)
    up()
    forward(52.5/2+25)
    down()
def W():
    left(90)
    up()
    forward(97)
    right(90+75)
    down()
    forward(100)
    left(75+75)
    forward(100)
    right(75+75)
    forward(100)
    left(75+75)
    forward(100)
    right(75+90)
    up()
    forward(97)
    left(90)
    forward(25)
    down()
def X():
    left(45)
    forward(137.1787155502)
    back(137.1787155502/2)
    right(90)
    back(137.1787155502/2)
    forward(137.1787155502)
    left(45)
    up()
    forward(25)
    down()
def Y():
    up()
    forward(48.5)
    left(90)
    down()
    forward(48.5)
    left(45)
    forward(68.5893577751)
    back(68.5893577751)
    right(90)
    forward(68.5893577751)
    back(68.5893577751)
    left(45)
    back(97/2)
    up()
    right(90)
    forward(48.5+25)
    down()
def Z():
    forward(97)
    back(97)
    left(45)
    forward(137.17871555502)
    left(135)
    forward(97)
    left(90)
    up()
    forward(97)
    left(90)
    forward(97+25)
    down()
def DOT():
    dot()
    up()
    forward(25)
    down()
def COMA():
    width(10)
    right(90)
    forward(10)
    back(10)
    left(90)
    width(5)
    up()
    forward(25)
    down()
def STRIPE():
    up()
    left(90)
    forward(97/2)
    right(90)
    down()
    forward(100)
    up()
    forward(25)
    right(90)
    forward(97/2)
    left(90)
    down()
def _():
    forward(100)
    up()
    forward(25)
    down()
def TWO_DOTS():
    left(90)
    up()
    forward(97/5)
    width(10)
    down()
    dot()
    up()
    forward(97/5*3)
    down()
    dot()
    up()
    back(97/5*4)
    width(5)
    right(90)
    forward(25)
    down()
def COMA_AND_DOT():
    left(90)
    up()
    width(10)
    forward(97/5)
    down()
    back(10)
    forward(10)
    up()
    forward(97/5*3)
    down()
    dot()
    up()
    back(97/5*4)
    right(90)
    forward(25)
    down()
def dot_and_line():
    dot()
    left(90)
    up()
    forward(97/5)
    down()
    forward(97/5*4)
    up()
    back(97)
    right(90)
    forward(25)
    down()
def question():
    up()
    forward(10)
    down()
    dot()
    left(90)
    up()
    forward(97/5)
    down()
    forward(97/5*2)
    right(90)
    circle(97/5, 270)
    up()
    circle(97/5, 90)
    right(90)
    forward(97/5*3)
    left(90)
    forward(25)
def quote():
    left(90)
    up()
    forward(97)
    down()
    width(10)
    back(10)
    forward(10)
    up()
    back(97)
    right(90)
    forward(25)
    down()
    width(5)
while True:
    LOL = input("Enter text: ")
    if LOL == "Enter":
        Enter = int(input("Line: "))
        ENTER(Enter)
    elif LOL == "Clear":
        clear()
        up()
        goto(-700, 0)
        down()
    else:
        for AUGH in range(len(LOL)):
            if LOL[AUGH] == 'A' or LOL[AUGH] == 'a':
                A()
            elif LOL[AUGH] == 'B' or LOL[AUGH] == 'b':
                B()
            elif LOL[AUGH] == 'C' or LOL[AUGH] == 'c':
                C()
            elif LOL[AUGH] == 'D' or LOL[AUGH] == 'd':
                D()
            elif LOL[AUGH] == 'E' or LOL[AUGH] == 'e':
                E()
            elif LOL[AUGH] == 'F' or LOL[AUGH] == 'f':
                F()
            elif LOL[AUGH] == 'G' or LOL[AUGH] == 'g':
                G()
            elif LOL[AUGH] == 'H' or LOL[AUGH] == 'h':
                H()
            elif LOL[AUGH] == 'I' or LOL[AUGH] == 'i':
                I()
            elif LOL[AUGH] == 'J' or LOL[AUGH] == 'j':
                J()
            elif LOL[AUGH] == 'K' or LOL[AUGH] == 'k':
                K()
            elif LOL[AUGH] == 'L' or LOL[AUGH] == 'l':
                L()
            elif LOL[AUGH] == 'M' or LOL[AUGH] == 'm':
                M()
            elif LOL[AUGH] == 'N' or LOL[AUGH] == 'n':
                N()
            elif LOL[AUGH] == 'O' or LOL[AUGH] == 'o':
                O()
            elif LOL[AUGH] == 'P' or LOL[AUGH] == 'p':
                P()
            elif LOL[AUGH] == 'Q' or LOL[AUGH] == 'q':
                Q()
            elif LOL[AUGH] == 'R' or LOL[AUGH] == 'r':
                R()
            elif LOL[AUGH] == 'S' or LOL[AUGH] == 's':
                S()
            elif LOL[AUGH] == 'T' or LOL[AUGH] == 't':
                T()
            elif LOL[AUGH] == 'U' or LOL[AUGH] == 'u':
                U()
            elif LOL[AUGH] == 'V' or LOL[AUGH] == 'v':
                V()
            elif LOL[AUGH] == 'W' or LOL[AUGH] == 'w':
                W()
            elif LOL[AUGH] == 'X' or LOL[AUGH] == 'x':
                X()
            elif LOL[AUGH] == 'Y' or LOL[AUGH] == 'y':
                Y()
            elif LOL[AUGH] == 'Z' or LOL[AUGH] == 'z':
                Z()
            elif LOL[AUGH] == ' ':
                SPACE()
            elif LOL[AUGH] == '.':
                DOT()
            elif LOL[AUGH] == ',':
                COMA()
            elif LOL[AUGH] == '-':
                STRIPE()
            elif LOL[AUGH] == '_':
                _()
            elif LOL[AUGH] == ':':
                TWO_DOTS()
            elif LOL[AUGH] == ';':
                COMA_AND_DOT()
            elif LOL[AUGH] == '!':
                dot_and_line()
            elif LOL[AUGH] == '?':
                question()
            elif LOL[AUGH] == "'":
                quote()
